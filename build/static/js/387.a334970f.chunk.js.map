{"version":3,"file":"static/js/387.a334970f.chunk.js","mappings":"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","sources":["config/APICongig.js","views/auth/add-child/index.js"],"sourcesContent":["\r\n//Live URL\r\nconst url = \"http://thecocoapp.com:8080/api/v1/\";\r\n\r\n//Local URL\r\n// const url = \"http://localhost:3500/api/v1/\";\r\n\r\nconst ApiConfig = {\r\n  loginGenerateOtp: `${url}auth/login/generate-otp`,\r\n  loginVerifyOtp: `${url}auth/login/verify-otp`,\r\n\r\n  signupGenerateOtp: `${url}auth/signup/generate-otp`,\r\n  signupVerifiedEmail: `${url}auth/signup-with-verfied-email`,\r\n  signupVerifyOtp: `${url}auth/signup/verify-otp`,\r\n\r\n  createChild: `${url}child/create`,\r\n  getSchool: `${url}school/get-all-schools`,\r\n};\r\nexport default ApiConfig;\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  FormHelperText,\r\n  Grid,\r\n  InputLabel,\r\n  MenuItem,\r\n  Select,\r\n  TextField,\r\n  Typography,\r\n} from \"@mui/material\";\r\nimport { Form, Formik } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport Page from \"src/component/Page\";\r\nimport ApiConfig from \"src/config/APICongig\";\r\nimport axios from \"axios\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { LiaUserCircleSolid } from \"react-icons/lia\";\r\nimport ButtonCircularProgress from \"src/component/ButtonCircularProgress\";\r\nimport toast from \"react-hot-toast\";\r\nimport { GrAddCircle } from \"react-icons/gr\";\r\n\r\nfunction AddChild(props) {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [childAdd, setChildAdd] = useState(false);\r\n  const [getData, setGetData] = useState([]);\r\n  const navigate = useNavigate();\r\n  const dateInputRef = useRef(null);\r\n  const formInitialSchema = {\r\n    name: \"\",\r\n    schoolId: \"\",\r\n    dob: \"\",\r\n    gender: \"\",\r\n    standard: \"\",\r\n  };\r\n\r\n  const handleFormSubmit = async (values) => {\r\n    setIsLoading(true);\r\n    try {\r\n      const res = await axios.post( ApiConfig.createChild,\r\n      {\r\n        childName: values.name,\r\n        schoolId: values.schoolId,\r\n        dob: values.dob,\r\n        standard: values.standard,\r\n        gender: values.gender,\r\n      },\r\n      {\r\n        headers: {\r\n          token: localStorage.getItem(\"token\"),\r\n        },});\r\n      if (res.status === 200) {\r\n        toast.success(res.data.message);\r\n        setIsLoading(false);\r\n        navigate(\"/dashboard\")\r\n      }\r\n    } catch (error) {\r\n      // toast.error(error.response.data.message);\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(()=>{\r\ngetSchool();\r\n  },[])\r\n  const getSchool = async () => {\r\n    try {\r\n       const res = await axios.get(ApiConfig.getSchool);\r\n\r\n       if(res.status === 200){\r\n          setGetData(res.data.data)\r\n       }\r\n    } catch (error) {\r\n      // console.error(error.response.data.message)\r\n    }\r\n  };\r\n  return (\r\n    <Page title=\"Add Child\">\r\n      <Box sx={{ display: \"grid\", gap: \"13px\", textAlign: \"center\" }}>\r\n        {!childAdd && (\r\n          <Typography variant=\"h1\" color={\"rgba(67, 69, 71, 1)\"} mt={1}>\r\n            Letâ€™s find the right modules for you\r\n          </Typography>\r\n        )}\r\n        {!childAdd && (\r\n          <Typography variant=\"h4\" color={\"rgba(67, 69, 71, 1)\"}>\r\n            This helps us show modules that are tailored for your child\r\n          </Typography>\r\n        )}\r\n        {!childAdd && (\r\n          <Box>\r\n            <Typography variant=\"h5\" sx={{ textAlign: \"start\" }}>\r\n              Child Info\r\n            </Typography>\r\n            <Box\r\n              sx={{\r\n                padding: \"11px 13px\",\r\n                border: \"1px solid rgba(216, 216, 216, 1)\",\r\n                display: \"flex\",\r\n                justifyContent: \"space-between\",\r\n                borderRadius: \"5px\",\r\n                alignItems: \"center\",\r\n              }}\r\n              onClick={() => {\r\n                setChildAdd(true);\r\n              }}\r\n            >\r\n              <Box sx={{ display: \"flex\", gap: \"8px\", alignItems: \"center\" }}>\r\n                <LiaUserCircleSolid\r\n                  style={{ color: \"#D8D8D8\", fontSize: \"25px\" }}\r\n                />\r\n                <Typography variant=\"body2\">Add child</Typography>\r\n              </Box>\r\n\r\n              <GrAddCircle style={{ color: \"#D8D8D8\", fontSize: \"22px\" }} />\r\n            </Box>\r\n          </Box>\r\n        )}\r\n        <Formik\r\n          onSubmit={handleFormSubmit}\r\n          initialValues={formInitialSchema}\r\n          validationSchema={yup.object().shape({\r\n            name: yup.string().required(\"Please enter your full name.\"),\r\n            schoolId: yup.string().required(\"Please select your School .\"),\r\n            dob: yup.string().required(\"Date of birth is required.\"),\r\n            gender: yup.string().required(\"Please select a gender.\"),\r\n            standard: yup.string().required(\"Please choose a standard.\"),\r\n          })}\r\n        >\r\n          {({\r\n            errors,\r\n            handleBlur,\r\n            handleChange,\r\n            handleSubmit,\r\n            touched,\r\n            values,\r\n          }) => (\r\n            <Form onSubmit={handleSubmit}>\r\n              {childAdd && (\r\n                <Grid sx={{ margin: \"13px 0\" }}>\r\n                  <Typography\r\n                    variant=\"h5\"\r\n                    sx={{ textAlign: \"start\", marginBottom: \"7px\" }}\r\n                  >\r\n                    First child\r\n                  </Typography>\r\n                  <Box sx={{ margin: \"13px 0\" }}>\r\n                    <TextField\r\n                      placeholder=\"Child's full name\"\r\n                      variant=\"outlined\"\r\n                      fullWidth\r\n                      size=\"small\"\r\n                      inputProps={{ maxLength: 256 }}\r\n                      value={values.name}\r\n                      name=\"name\"\r\n                      error={Boolean(touched.name && errors.name)}\r\n                      onBlur={handleBlur}\r\n                      onChange={handleChange}\r\n                    />\r\n                    <FormHelperText\r\n                      error={Boolean(touched.name && errors.name)}\r\n                    >\r\n                      {touched.name && errors.name}\r\n                    </FormHelperText>\r\n                  </Box>\r\n                  <Box sx={{ margin: \"13px 0\" }}>\r\n                    <Typography\r\n                      variant=\"h5\"\r\n                      sx={{ textAlign: \"start\", marginBottom: \"7px\" }}\r\n                    >\r\n                      Select school\r\n                    </Typography>\r\n                    <Select\r\n                      labelId=\"demo-simple-select-helper-label\"\r\n                      id=\"demo-simple-select-helper\"\r\n                      value={values.schoolId}\r\n                      onChange={handleChange}\r\n                      name=\"schoolId\"\r\n                      fullWidth\r\n                      displayEmpty\r\n                      inputProps={{ \"aria-label\": \"Without label\" }}\r\n                    >\r\n                      {getData.map((value) => {\r\n                        return (\r\n                          <MenuItem value={value._id}>\r\n                            {value.schoolName}\r\n                          </MenuItem>\r\n                        );\r\n                      })}\r\n                    </Select>\r\n                    <FormHelperText\r\n                      error={Boolean(touched.schoolId && errors.schoolId)}\r\n                    >\r\n                      {touched.schoolId && errors.schoolId}\r\n                    </FormHelperText>\r\n                  </Box>\r\n                  <Box sx={{ margin: \"13px 0\" }}>\r\n                    <TextField\r\n                      placeholder=\"DD/MM/YYYY\"\r\n                      variant=\"outlined\"\r\n                      fullWidth\r\n                      size=\"small\"\r\n                      inputProps={{ maxLength: 256 }}\r\n                      value={values.dob}\r\n                      name=\"dob\"\r\n                      error={Boolean(touched.dob && errors.dob)}\r\n                      onBlur={handleBlur}\r\n                      onChange={handleChange}\r\n                    />\r\n                    <FormHelperText error={Boolean(touched.dob && errors.dob)}>\r\n                      {touched.dob && errors.dob}\r\n                    </FormHelperText>\r\n                  </Box>\r\n                  <Typography variant=\"h5\" sx={{ textAlign: \"start\" }}>\r\n                    Gender\r\n                  </Typography>\r\n                  <Box sx={{ margin: \"13px 0\" }}>\r\n                    <Select\r\n                      labelId=\"demo-simple-select-helper-label\"\r\n                      id=\"demo-simple-select-helper\"\r\n                      value={values.gender}\r\n                      onChange={handleChange}\r\n                      name=\"gender\"\r\n                      fullWidth\r\n                      displayEmpty\r\n                      inputProps={{ \"aria-label\": \"Without label\" }}\r\n                    >\r\n                      <MenuItem value=\"Male\">Boy</MenuItem>\r\n                      <MenuItem value=\"Female\">Girl</MenuItem>\r\n                    </Select>\r\n                    <FormHelperText\r\n                      error={Boolean(touched.gender && errors.gender)}\r\n                    >\r\n                      {touched.gender && errors.gender}\r\n                    </FormHelperText>\r\n                  </Box>\r\n                  <Typography variant=\"h5\" sx={{ textAlign: \"start\" }}>\r\n                    Standard\r\n                  </Typography>\r\n                  <Box sx={{ margin: \"13px 0\" }}>\r\n                    <Select\r\n                      labelId=\"demo-simple-select-helper-label\"\r\n                      id=\"demo-simple-select-helper\"\r\n                      value={values.standard}\r\n                      onChange={handleChange}\r\n                      name=\"standard\"\r\n                      fullWidth\r\n                      displayEmpty\r\n                      inputProps={{ \"aria-label\": \"Without label\" }}\r\n                    >\r\n                      {[1, 2, 3, 4, 5, 6].map((value) => (\r\n                        <MenuItem key={value} value={value.toString()}>\r\n                          {value}\r\n                        </MenuItem>\r\n                      ))}\r\n                    </Select>\r\n                    <FormHelperText\r\n                      error={Boolean(touched.standard && errors.standard)}\r\n                    >\r\n                      {touched.standard && errors.standard}\r\n                    </FormHelperText>\r\n                  </Box>\r\n\r\n                  {/* <Typography variant=\"h5\" sx={{ textAlign: \"start\" }}>\r\n                    Add another child\r\n                  </Typography>\r\n                  <Box\r\n                    sx={{\r\n                      padding: \"11px 13px\",\r\n                      border: \"1px solid rgba(216, 216, 216, 1)\",\r\n                      display: \"flex\",\r\n                      justifyContent: \"space-between\",\r\n                      borderRadius: \"5px\",\r\n                      alignItems: \"center\",\r\n                    }}\r\n                  >\r\n                    <Box\r\n                      sx={{ display: \"flex\", gap: \"8px\", alignItems: \"center\" }}\r\n                    >\r\n                      <LiaUserCircleSolid\r\n                        style={{ color: \"#D8D8D8\", fontSize: \"25px\" }}\r\n                      />\r\n                      <Typography variant=\"body2\">Add child</Typography>\r\n                    </Box>\r\n                    <GrAddCircle\r\n                      style={{ color: \"#D8D8D8\", fontSize: \"22px\" }}\r\n                    />\r\n                  </Box> */}\r\n                </Grid>\r\n              )}\r\n              <Grid>\r\n                <Box sx={{ marginTop: \"26px\" }}>\r\n                  <Button\r\n                    type=\"submit\"\r\n                    variant=\"contained\"\r\n                    disabled={isLoading}\r\n                    fullWidth\r\n                  >\r\n                    Continue\r\n                    {isLoading && <ButtonCircularProgress />}\r\n                  </Button>\r\n                </Box>\r\n                <Box\r\n                  sx={{\r\n                    display: \"grid\",\r\n                    justifyContent: \"center\",\r\n                    mt: \"13px\",\r\n                  }}\r\n                ></Box>\r\n              </Grid>\r\n            </Form>\r\n          )}\r\n        </Formik>\r\n      </Box>\r\n    </Page>\r\n  );\r\n}\r\n\r\nexport default AddChild;\r\n"],"names":["url","loginGenerateOtp","concat","loginVerifyOtp","signupGenerateOtp","signupVerifiedEmail","signupVerifyOtp","createChild","getSchool","props","isLoading","setIsLoading","useState","childAdd","setChildAdd","getData","setGetData","navigate","useNavigate","useRef","useEffect","async","res","axios","get","ApiConfig","status","data","error","_jsx","Page","title","children","_jsxs","Box","sx","display","gap","textAlign","Typography","variant","color","mt","padding","border","justifyContent","borderRadius","alignItems","onClick","LiaUserCircleSolid","style","fontSize","GrAddCircle","Formik","onSubmit","post","childName","values","name","schoolId","dob","standard","gender","headers","token","localStorage","getItem","toast","success","message","initialValues","validationSchema","yup","shape","required","_ref","errors","handleBlur","handleChange","handleSubmit","touched","Form","Grid","margin","marginBottom","TextField","placeholder","fullWidth","size","inputProps","maxLength","value","Boolean","onBlur","onChange","FormHelperText","Select","labelId","id","displayEmpty","map","MenuItem","_id","schoolName","toString","marginTop","Button","type","disabled","ButtonCircularProgress"],"sourceRoot":""}